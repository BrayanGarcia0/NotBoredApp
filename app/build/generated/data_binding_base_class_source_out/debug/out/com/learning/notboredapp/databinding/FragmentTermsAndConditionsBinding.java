// Generated by view binder compiler. Do not edit!
package com.learning.notboredapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.learning.notboredapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTermsAndConditionsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnTermsAndConditionsClose;

  @NonNull
  public final TextView textViewTermsAndConditionsDescription;

  @NonNull
  public final TextView textViewTermsAndConditionsTitle;

  @NonNull
  public final TextView textViewTermsConditionsAppName;

  private FragmentTermsAndConditionsBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnTermsAndConditionsClose,
      @NonNull TextView textViewTermsAndConditionsDescription,
      @NonNull TextView textViewTermsAndConditionsTitle,
      @NonNull TextView textViewTermsConditionsAppName) {
    this.rootView = rootView;
    this.btnTermsAndConditionsClose = btnTermsAndConditionsClose;
    this.textViewTermsAndConditionsDescription = textViewTermsAndConditionsDescription;
    this.textViewTermsAndConditionsTitle = textViewTermsAndConditionsTitle;
    this.textViewTermsConditionsAppName = textViewTermsConditionsAppName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTermsAndConditionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTermsAndConditionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_terms_and_conditions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTermsAndConditionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnTermsAndConditionsClose;
      Button btnTermsAndConditionsClose = ViewBindings.findChildViewById(rootView, id);
      if (btnTermsAndConditionsClose == null) {
        break missingId;
      }

      id = R.id.textViewTermsAndConditionsDescription;
      TextView textViewTermsAndConditionsDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewTermsAndConditionsDescription == null) {
        break missingId;
      }

      id = R.id.textViewTermsAndConditionsTitle;
      TextView textViewTermsAndConditionsTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTermsAndConditionsTitle == null) {
        break missingId;
      }

      id = R.id.textViewTermsConditionsAppName;
      TextView textViewTermsConditionsAppName = ViewBindings.findChildViewById(rootView, id);
      if (textViewTermsConditionsAppName == null) {
        break missingId;
      }

      return new FragmentTermsAndConditionsBinding((LinearLayout) rootView,
          btnTermsAndConditionsClose, textViewTermsAndConditionsDescription,
          textViewTermsAndConditionsTitle, textViewTermsConditionsAppName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
